#OPTION( BUILD_SHARED_LIBS "Set to OFF to build static libraries" ON )
INCLUDE_DIRECTORIES("${PROJECT_SOURCE_DIR}")

if(COMMAND cmake_policy)
  cmake_policy(SET CMP0003 NEW)
endif(COMMAND cmake_policy)

SET(snowpacklib_sources 
  DataClasses.cc
  SnowpackIO.cc
  AsciiIO.cc
  SnowpackConfig.cc
  Laws.cc
  Meteo.cc
  Saltation.cc
  Snowpack.cc
  Aggregate.cc
  Laws_sn.cc
  Utils.cc
  Stability.cc
  WaterTransport.cc
  Canopy.cc
  Hazard.cc
  Metamorphism.cc
  PhaseChange.cc
  Radiation.cc
  SnowDrift.cc
  Solver.cc
)

#SET(STATICNAME ${PROJECT_NAME}_STATIC)
#SET(STATICLIBNAME ${PROJECT_NAME})
#ADD_LIBRARY(${STATICNAME} STATIC ${snowpacklib_sources})
#TARGET_LINK_LIBRARIES(${STATICNAME} meteoio)
#SET_TARGET_PROPERTIES(${STATICNAME} PROPERTIES 
#  LIBRARY_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/lib
#  ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/lib
#  CLEAN_DIRECT_OUTPUT 1
#  OUTPUT_NAME ${STATICLIBNAME}
#)

#INSTALL(TARGETS ${STATICNAME}
#  RUNTIME DESTINATION bin
#  LIBRARY DESTINATION lib
#  ARCHIVE DESTINATION lib
#)

IF(PLUGIN_IMISIO)
  SET(snowpacklib_sources ${snowpacklib_sources} ImisDBIO.cc)
ENDIF(PLUGIN_IMISIO)

FIND_PACKAGE(MeteoIO)
INCLUDE_DIRECTORIES(${INCLUDE_DIRECTORIES} ${METEOIO_INCLUDE_DIR})
LINK_DIRECTORIES(${METEOIO_LIBRARIES}) #this, so that if the users types in paths, it works

SET(SHAREDNAME ${PROJECT_NAME})
ADD_LIBRARY(${SHAREDNAME} SHARED ${snowpacklib_sources})
TARGET_LINK_LIBRARIES(${SHAREDNAME} ${METEOIO_LIBRARIES})

IF(PLUGIN_IMISIO)
  FIND_PACKAGE(OCCI)
  INCLUDE_DIRECTORIES(${INCLUDE_DIRECTORIES} ${OCCI_INCLUDE_DIR})
  LINK_DIRECTORIES(${OCCI_LIBRARIES}) #this, so that if the users types in paths, it works
  TARGET_LINK_LIBRARIES(${SHAREDNAME} ${METEOIO_LIBRARIES} ${OCCI_LIBRARIES}/libocci.so ${OCCI_LIBRARIES}/libclntsh.so)
ENDIF(PLUGIN_IMISIO)

SET_TARGET_PROPERTIES(${SHAREDNAME} PROPERTIES
  LIBRARY_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/lib
  ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/lib
  CLEAN_DIRECT_OUTPUT 1
  VERSION ${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}
  SOVERSION ${VERSION_MAJOR}
)

INSTALL(TARGETS ${SHAREDNAME}
  RUNTIME DESTINATION bin
  LIBRARY DESTINATION lib
  ARCHIVE DESTINATION lib
)

